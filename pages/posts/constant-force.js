import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from 'next/link'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faArrowDown } from '@fortawesome/free-solid-svg-icons'

export default function ConstantForce() {
    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>Constant Force</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <h1 className="title">
                        Constant Force
                    </h1>
                    <div className={styles.divMaxI}>
                        <p>Hier ga ik even dieper ingaan op de &apos;Constant Force&apos; component van Unity.</p>
                    </div>
                    {/* <p className={styles.description}>
                        Get started by editing{' '}
                        <code className={styles.code}>pages/index.js</code>
                    </p> */}

                    <div className={styles.grid}>
                        <div className={styles.cardLong}>
                            <h2>Constant Force</h2>
                            <p className={styles.descriptionIdea}>Uitvoering</p>
                            <p>Bij het idee om een &apos;Constant force&apos; te hebben dacht ik in eerste instantie dat je dit op je hele project in 1 keer kon toevoegen, zodat alles in je project ondergevig is aan die kracht.</p>
                            <p>Dit is niet het geval. Zo een component moet je toevoegen op ieder object apart.</p>
                            <p>We zullen bijvoorbeeld een beginnen om onze constant force op het kompas toe te passen. Klik op je 3D-object, en voeg <span className={styles.codeish}>Add Component</span> &rarr; <span className={styles.codeish}>Constant Force</span> toe.</p>
                            <p>Je ziet dat je verschillende waarden kan aanpassen in je component. Naar de &apos;Torques&apos; gaan wij voorlopig niet echt kijken. Dit dient om een constante rotatie op een voorwerp te zetten (zoals bijvoorbeeld een tandwiel van een machine dat ronddraait).</p>
                            <p>Wat we echter wel zullen aanpassen is de Force.</p>
                            <Image className={styles.cardLongImage} src="/constantForce.png" height={175} width={800} />
                            <p>Ik speelde een beetje met verschillende waarden, maar er gebeurde helemaal niets. In het artikel over deze constantForce werd er ook niet zoveel uitleg gegeven hierover, dus ging ik zelf opzoek.</p>
                            <p>Ik wist dat je op de Rigidbody van je voorwerp ook de massa en drag kon aanpassen. Ook kan je kiezen om <span className={styles.codeish}>Gravity</span> uit te zetten.</p>
                            <p>Nadat ik de gravity uitschakelde zag ik wel veranderingen in het gedrag van mijn objecten. Mijn object vloog tegen de muur, draaide toeren rond zijn eigen as, en probeerde zelfs door de muren van mijn kamer te breken.</p>
                            <p>Toen ik dit zag, wist ik dat ik op het goede spoor zat.</p>
                            <p>Het enige dat je eigenlijk moet aanpassen om een ander zwaartekrachtsveld te hebben is de Y-waarde van de Force.</p>
                            <p>Om de zwaartekracht onderwater na te doen vond ik dat 0.67 voor de Y-waarde niet slecht was. Je object zink niet zo snel meer naar de bodem, en voelt vrij natuurlijk aan.</p>
                            <p>Perfect! Voeg deze component nu toe op ieder object, en vergeet niet om overal ook de gravity uit te schakelen in je Rigidbody.</p>
                        </div>
                    </div>
                    <div className={styles.flexStepButtons}>
                        <Link href="onderwater"><p className={styles.stepButton}>&larr; previous</p></Link>
                        <Link href="mist"><p className={styles.stepButton}>next &rarr;</p></Link>
                    </div>
                </main>

                <footer className={styles.footer}>
                    <p>by: Erin Troch</p>
                </footer>
            </div>
        </>
    )
}