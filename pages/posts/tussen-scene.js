import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from 'next/link'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faArrowDown } from '@fortawesome/free-solid-svg-icons'

export default function TussenScene() {
    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>Tussen Scene</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <h1 className="title">
                        Tussen Scene
                    </h1>
                    <div className={styles.divMaxI}>
                        <p>Nadat de speler op &apos;Play&apos; drukt, schakelt onze scene onmiddelijk over naar de escaperoom. Dat is een beetje vaag voor de gebruiker natuurlijk, dus besloot ik om een korte samenvatting te geven van hoe de gebruiker daar terrecht komt.</p>
                        <p>In deze scene zal ik de speler aanspreken via een mede-duiker.</p>
                    </div>
                    {/* <p className={styles.description}>
                        Get started by editing{' '}
                        <code className={styles.code}>pages/index.js</code>
                    </p> */}

                    <div className={styles.grid}>
                        <div className={styles.cardLong}>
                            <Image className={styles.cardLongImage} src="/tussen-scene.png" height={350} width={800} />
                            <br></br>
                            <br></br>
                            <h2>Tussen Scene</h2>
                            <p className={styles.descriptionIdea}>Setup</p>
                            <p>Net zoals bij de start-scene dupliceerde ik een vorige scene om in te werken. Deze scene is gelijkaardig aan de start-scene.</p>
                            <p>De speler is omsingeld door de koralen en vissen, en bevindt zich erg dicht bij het schip.</p>
                            <p>Ik ga niet echt dieper ingaan over de details van deze setup. De XR-rig, fog en belichting zijn gewoon terug een kopië van de escaperoom.</p>
                            <p>Wel zorgde ik er net zoals bij de start-scene voor dat de volledige achtergrond blauw is.</p>
                            <p className={styles.descriptionIdea}>Het verhaal</p>
                            <p>Zoals ik al zei wil ik in deze scene een korte introductie geven van de duiker terrecht kwam in de boot.</p>
                            <p className={styles.extra}>Het verhaaltje:</p>
                            <p>Jij als speler bent al even aan het duiken, en je zuurstof begon stillaan op te geraken. Een mede-duiker (Josh) laat via een oortje weten dat het tijd wordt om terug naar de oppervlakte te komen. Jij als speler ziet net een gezonken schip, en je wilt persé nog even een kijkje nemen in het schip. Natuurlijk wist je niet dat het schip vol boobytraps zit, en moet je dus ontsnappen voor je zuurstof op is.</p>
                            <p>Dan begint de escaperoom.</p>
                            <p className={styles.descriptionIdea}>Canvas - UI</p>
                            <p>Om Josh te laten communiceren maakte ik opnieuw een UI-canvas aan.</p>
                            <p>Ik maakte duidelijk via een tektsballon en een gezicht van de duiker dat de duiker effectief tegen jou spreekt.</p>
                            <Image className={styles.cardLongImage} src="/josh-info.png" height={175} width={800} />
                            <p>Dit canvas zal constant tezien zijn door de UI-camera terug te koppelen aan dit canvas, en de mode van je canvas op <span className={styles.codeish}>Screen Space - Camera</span> te zetten.</p>
                            <p>De knop van het canvas is terug een <span className={styles.codeish}>Button - Text Mesh Pro</span> met een afbeelding.</p>
                            <p>De structuur van mijn canvas zag er zo uit:</p>
                            <Image className={styles.cardLongImage} src="/josh-struc.png" height={175} width={800} />
                            <p className={styles.descriptionIdea}>Josh laten spreken</p>
                            <p>Net zoals in vele games wilde ik Josh laten spreken door op een &apos;Next-knop&apos; te drukken.</p>
                            <p>Ik schreef terug een Script waarin ik ieder blokje tekst dat Josh zei onder een nieuwe <span className={styles.codeish}>if-statement</span> stak.</p>
                            <p>Via een variable kon ik dan weten hoeveel keer er al op de knop was gedrukt om aan de hand van die variable het juiste stukje tekst te tonen aan de speler.</p>
                            <p>Bij het einde van Josh zijn gesprek zorgde ik ervoor dat de knop terug een overschakeling was naar een andere scene.</p>
                        </div>
                    </div>
                    <div className={styles.flexStepButtons}>
                        <Link href="startup-scene"><p className={styles.stepButton}>&larr; previous</p></Link>
                        <Link href="oxygen-bar"><p className={styles.stepButton}>next &rarr;</p></Link>
                    </div>
                </main>

                <footer className={styles.footer}>
                    <p>by: Erin Troch</p>
                </footer>
            </div>
        </>
    )
}