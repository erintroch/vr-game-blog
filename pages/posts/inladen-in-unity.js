import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from 'next/link'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faArrowDown } from '@fortawesome/free-solid-svg-icons'

export default function InladenInUnity() {
    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>Inladen in unity</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <h1 className="title">
                        Inladen in unity
                    </h1>
                    <div className={styles.divMaxI}>
                        <p>Na het maken van mijn eigen models besloot ik om mijn volledige scene eens in te laden in Unity.</p>
                        <p>Zoals je zult zien heb ik de models ook al ingekleurd. Dit geeft de scene onmiddelijk een veel warmer en volmaakt gevoel.</p>
                    </div>
                    {/* <p className={styles.description}>
                        Get started by editing{' '}
                        <code className={styles.code}>pages/index.js</code>
                    </p> */}

                    <div className={styles.grid}>
                        <div className={styles.cardLong}>
                            <h2>Inladen in Unity</h2>
                            <p className={styles.descriptionIdea}>De scene</p>
                            <p>Zoals ik al eerder heb gezegd had ik nog helemaal geen kleur in mijn models gestoken op voorhand. Via <span className={styles.codeish}>Materials</span> in Unity heb ik alle models dan ingekleurd.</p>
                            <p>Een voordeel hiervan is dat ik zelf achteraf nog gemakkelijk kleuren / texturen kan aanpassen.</p>
                            <p>Nog niet alle models die ik nodig zal hebben staan hier in. Voorlopig werk ik met de models die ik heb.</p>
                            <Image className={styles.cardLongImage} src="/scene-color2.jpg" height={350} width={800} />
                            <Image className={styles.cardLongImage} src="/scene-color1.jpg" height={350} width={800} />
                            <Image className={styles.cardLongImage} src="/scene-color3.jpg" height={350} width={800} />
                            <p className={styles.descriptionIdea}><span className={styles.extra}>extra:</span> FBX-glitch</p>
                            <p>Soms doet je FBX-model wel eens raar, en rendert hij enkel de binnenkant van je model. Dit toonde ik al eerder aan bij <span className={styles.codeish}>FBX ready</span>.</p>
                            <p>Wel, deze &apos;glitch&apos; kunnen wij in ons voordeel gebruiken!</p>
                            <p>De muren, plafont en vloer die ik maakte van mijn kamer zijn gewoon planes. Deze zijn dus zogezegd 2D. FBX rendert alleen maar de voorkant van deze planes omdat er in een 2D-omgeving geen achterkant is.</p>
                            <p>Als wij dus aan de binnenkant van deze kamer staan, is de plafont, muren en vloer doorzichtig. Dit is natuurlijk niet de bedoeling.</p>
                            <p>Een gemakkelijke oplossing is ervoor zorgen dan je muren 3D-objecten zijn, en niet 2D. Ik loste dit anders op.</p>
                            <p>Ik exporteerde de muren, plafont & vloer elk afzonderlijk zodat ik deze in unity 180Â° zou kunnen draaien. Dit had als gevolg dat als we aan de binnenkant van de kamer staan, we de muren wel kunnen zien, en als we van de buitenkant kijken, we eigenlijk gewoon in het gebouw kunnen kijken.</p>
                            <p>Je kan zien op de afbeelding dat de rechtermuur & de plafont doorzichtig zijn.</p>
                            <Image className={styles.cardLongImage} src="/scene-color4.jpg" height={350} width={800} />
                        </div>
                    </div>
                    <div className={styles.flexStepButtons}>
                        <Link href="models"><p className={styles.stepButton}>&larr; previous</p></Link>
                        <Link href="colliders"><p className={styles.stepButton}>next &rarr;</p></Link>
                    </div>
                </main>

                <footer className={styles.footer}>
                    <p>by: Erin Troch</p>
                </footer>
            </div>
        </>
    )
}