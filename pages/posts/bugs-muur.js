import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from 'next/link'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faArrowDown } from '@fortawesome/free-solid-svg-icons'

export default function BugsMuur() {
    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>Bugs - muur</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <h1 className="title">
                        Bugs - muur
                    </h1>
                    <div className={styles.divMaxI}>
                        <p>Als developer heb je wel vaker temaken van bugs.</p>
                        <p>Vooraleer ik met het verhaal mijn spel doorging besloot ik om eerst enkele bugs op te lossen waarvan ik wist dat ze nog bestonden.</p>
                    </div>
                    {/* <p className={styles.description}>
                        Get started by editing{' '}
                        <code className={styles.code}>pages/index.js</code>
                    </p> */}

                    <div className={styles.grid}>
                        <div className={styles.cardLong}>
                            <Image className={styles.cardLongImage} src="/bugWall.png" height={350} width={800} />
                            <br></br>
                            <br></br>
                            <h2>Bugs</h2>
                            <p className={styles.descriptionIdea}>Door de muur kijken</p>
                            <p>Aangezien we in VR met de &apos;6-senses of VR&apos; moeten rekening houden, kunnen we niet zomaar een zone afbakenen in ons spel waar onze speler al dan niet naar toe kan.</p>
                            <p>We hebben eerder onze teleport-zone al gemaakt van onze vloer, maar we kunnen wel nog steeds van deze zone af lopen met als gevolg dat we door de muren kunnen lopen / kijken.</p>
                            <p>Ik wist al even dat dit probleem in de game zat, maar ik wist niet zo goed hoe ik dit moest oplossen.</p>
                            <p>Ik ging opzoek op het internet wat anderen deden om dit probleem te voorkomen. Een optie die erg veel terugkeerde was een <span className={styles.codeish}>zwarte zone</span> maken.</p>
                            <p>Als een speler de muur aanraakt met zijn hoofd, zal de speler een zwart scherm tezien krijgen. Als de speler de muur niet meer aanraakt, zal de zwarte zone terug verdwijnen.</p>
                            <p>Onze muren hebben al <span className={styles.codeish}>Box Colliders</span>, dus was het gewoon terug een kwestie van het controlleren van een <span className={styles.codeish}>Collision</span>... Of dat dacht ik toch.</p>
                            <p className={styles.descriptionIdea}>Maken van zwart scherm</p>
                            <p>Om te beginnen maak je een nieuw UI-element aan in je rootmapje van je project via <span className={styles.codeish}>UI</span> &rarr; <span className={styles.codeish}>Image</span>.</p>
                            <p>Dit maakt automatisch ook een nieuw Canvas aan (met je Image in het canvas).</p>
                            <p>Geef je Image een zwarte kleur.</p>
                            <p>Zodat de overgang van gewone scene naar zwarte scene niet hard is, zullen via een animator een vloeiende overgang zetten op onze Image.</p>
                            <p>Als je de Animator-tab & Animation-tab nog niet hebt, kan je via <span className={styles.codeish}>Window</span> &rarr; <span className={styles.codeish}>Animation</span> &rarr; <span className={styles.codeish}>Animator / Animation</span> deze tab tezien krijgen.</p>
                            <p>Maak in de Animation-tab een nieuwe animatie aan. Binnen die animation kan je verschillende clips aanmaken. Maak een nieuwe clip genaamd &apos;Fade-in&apos;.</p>
                            <p>Sleep deze animation nu op je zwarte Image als component.</p>
                            <p>Via de keyframes kan je je zwarte-UI-Image nu aanpassen, dat hij in het begin van de animatie een transparantie van 0 heeft, en op het einde 100.</p>
                            <p>Maak nu ook een tweede clip aan, en maak de omgekeerde animatie.</p>
                            <Image className={styles.cardLongImage} src="/bugWallAnimate.png" height={175} width={800} />
                            <p>Nu je deze clips hebt, kan je de Animator openen. Normaal staan je twee clips al in de animator, maar als dit niet het geval is kan je via rechtermuisknop deze animaties handmatig toevoegen.</p>
                            <Image className={styles.cardLongImage} src="/bugWallAnimation.png" height={175} width={800} />
                            <p>Perfect! De animaties staan erin! Nu kunnen we terug zelf via een script enkele functies schrijven die de <span className={styles.codeish}>Animator</span> zullen aanspreken, en kunnen we de animaties op een collision met een muur laten afspelen.</p>
                            <p className={styles.descriptionIdea}>UI-camera</p>
                            <p>Nu gebeurt er nog echt iets als we de muur aanraken, omdat we onze UI nog niet gekoppeld hebben aan ons hoofd.</p>
                            <p>Binnen het Canvas-element van je zwart scherm heb je nog een optie op deze overlay van camera standpunt aan te passen. Zet je <span className={styles.codeish}>Render Mode</span> op <span className={styles.codeish}>Screen Space - Overlay</span>.</p>
                            <Image className={styles.cardLongImage} src="/cameraUI.png" height={175} width={800} />
                            <p>Nu zal je canvas ten alle tijde je hoofd volgen. Speel een beetje met de waarden van dichtheid / plane distance om tot het gewenste resultaat te komen.</p>
                            <p className={styles.descriptionIdea}>Outside collision</p>
                            <p>Dat was al een hele boterham, maar we zijn er nog net niet. Als we met ons VR-hoofd op de muur zitten, zien we het scherm zwart worden.</p>
                            <p>Als we verdergaan dan de muur, dan wordt ons zicht terug helder, maar zitten we nog steeds buiten de zone.</p>
                            <p>Om dit op te lossen moet je gigantische colliders buiten je muren maken, zodat er een heel gebied wordt gezien als &apos;muur&apos;.</p>
                            <p>En voila, de speler zal niet meer door de muur kunnen kijken!</p>
                        </div>
                    </div>
                    <div className={styles.flexStepButtons}>
                        <Link href="verhaallijn"><p className={styles.stepButton}>&larr; previous</p></Link>
                        <Link href="bugs-handen"><p className={styles.stepButton}>next &rarr;</p></Link>
                    </div>
                </main>

                <footer className={styles.footer}>
                    <p>by: Erin Troch</p>
                </footer>
            </div>
        </>
    )
}